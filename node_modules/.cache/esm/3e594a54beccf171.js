let User,multer,path,fs;_bec‍.x([["default",()=>_bec‍.o]]);_bec‍.w("../model/User",[["default",["User"],function(v){User=v}]]);_bec‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_bec‍.w("path",[["default",["path"],function(v){path=v}]]);_bec‍.w("fs",[["default",["fs"],function(v){fs=v}]]);




const storage = multer.diskStorage({
  destination: (req,file,cb) => cb(null, 'uploads/'),
  filename: (req, file, cb) => {
    cb(null, Date.now() + "-" + file.originalname)
  },
    
    });

    // const filetype = multer({

    //   fileFilter: (req, file, cb) => {
    //         if (file.mimetype === "pdf" ) {
    //           cb(null, true);
    //         } else {
    //           cb(null, false);
    //           return cb(new Error('Only .png, .jpg and .jpeg format allowed!'));
    //         }
    //       }

    // })
  

    // cb(null, Date.now() + "-" + file.originalname)
const handleMultipartData = multer({ storage, limit: {filesize : 1000000 * 5 }}).single('resume');
const userController = {

    async apply(req, res) {
            handleMultipartData(req,res, async (err) => {

                const { name, email, phone, linkedin, resume, reference } = req.body;
                const filePath = req.file.path;
                  _bec‍.g.console.log(filePath)
                  let document;
                try{
                   document = await User.create({
                    name,
                    email,
                    phone,
                    linkedin, 
                    resume: filePath,
                    reference

                });
                      _bec‍.g.console.log(document);
                  }
                  catch(err){
                     _bec‍.g.console.log(err)
                  }
                  res.status(201).json({
                      success:true,
                      data: document
                  }); 
              });
         
            },
            async index(req, res) {
              const userdata = await User.findOne({email,phone});
                
           
            

               res.status(201).json(userdata);
               _bec‍.g.console.log(userdata)
            },
      
                     
}
_bec‍.d(userController);